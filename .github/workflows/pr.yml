name: pull request

on:
  pull_request:
    branches:
      - main

env:
  major_version: '0'
  minor_version: '0.0'
  environment_short_code: 'dev'
  root_directory_name: 'Web.api'

concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Variables
        id: set_output
        run: |
          VERSION=${{ env.major_version }}.${{ env.minor_version }}.$GITHUB_RUN_NUMBER
          echo "Version Number: $VERSION"

          RESOURCE_GROUP=${{ env.environment_short_code }}-pipeline-demo-wus
          echo "Resource Group Name: $RESOURCE_GROUP"

          WEBAPP_NAME=${{ env.environment_short_code }}-webApp-wus
          echo "Webapp Name: $WEBAPP_NAME"

          ROOT_DIRECTORY=${{ env.root_directory_name }}
          echo "Root Directory Name: $ROOT_DIRECTORY"

          echo "::set-output name=DOCKER_REPOSITORY_NAME::pipeline-demo"
          echo "::set-output name=VERSION::$VERSION"
          echo "::set-output name=RESOURCE_GROUP_NAME::$RESOURCE_GROUP"
          echo "::set-output name=WEBAPP_NAME::$WEBAPP_NAME"
          echo "::set-output name=ROOT_DIRECTORY_NAME::$ROOT_DIRECTORY"
    outputs:
      docker_repository_name: ${{ steps.set_output.outputs.docker_repository_name }}
      version: ${{ steps.set_output.outputs.version }}
      resource_group_name: ${{ steps.set_output.outputs.resource_group_name }}
      webapp_name: ${{ steps.set_output.outputs.WEBAPP_NAME }}
      root_directory_name: ${{ steps.download.outputs.ROOT_DIRECTORY_NAME }}

  build:
    needs: setup
    uses: ./.github/workflows/build.yml
    with:
      solution_path: ./${{ needs.setup.outputs.root_directory_name }}/Web.api.sln
      coverage_info_file_path: ./${{ needs.setup.outputs.root_directory_name }}/Web.api.Tests/TestResults/coverage.info
      build_artifacts_file_path: ./operations
      healthcheck_artifacts_file_path: .github/scripts
    secrets:
      code_coverage_token: ${{ secrets.GITHUB_TOKEN }}

  analysis:
    uses: ./.github/workflows/codeql.yml
    with:
      config_file_path: ./.github/codeql/config.yml

  docker:
    needs: [build, setup]
    uses: ./.github/workflows/docker.yml
    with:
      docker_file_directory: ./${{ needs.setup.outputs.root_directory_name }}
      docker_repository_name: ${{ needs.setup.outputs.docker_repository_name }}
      docker_image_tag: ${{ needs.setup.outputs.version }}
    secrets:
      docker_login_username: ${{ secrets.docker_login_username }}
      docker_login_password: ${{ secrets.docker_login_password }}

  deploy_infra:
    needs: [build, docker, setup]
    uses: ./.github/workflows/deploy.yml
    with:
      resource_group_name: '${{ needs.setup.outputs.resource_group_name }}'
      bicep_parameters:  './dev.parameters.json'
      webapp_name: ${{ needs.setup.outputs.webapp_name }}
      docker_image_tag: ${{ needs.setup.outputs.version }}
      docker_repository_name: ${{ needs.setup.outputs.docker_repository_name }}
      region: 'west us'
    secrets:
     azure_credentials: ${{ secrets.azure_credentials }}
     subscription_id: ${{ secrets.subscription_id }}
     docker_login_username: ${{ secrets.docker_login_username }}
     docker_login_password: ${{ secrets.docker_login_password }}

  health_check:
    needs: [setup, deploy_infra]
    uses: ./.github/workflows/healthcheck.yml
    with:
      webappUrl: https://${{ needs.setup.outputs.webapp_name }}.azurewebsites.net

  cleanup_infra:
    needs: [setup, deploy_infra, health_check]
    uses: ./.github/workflows/cleanup.yml
    with:
      resource_group_name: ${{ needs.setup.outputs.resource_group_name }}
    secrets:
      azure_credentials: ${{ secrets.azure_credentials }}